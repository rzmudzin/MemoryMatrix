# This is a basic workflow that is manually triggered

name: Build and Deploy

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      # name:
      #   description: 'Build Name'
      #   # Default value if no value is explicitly provided
      #   default: 'Memory Matrix'   

      build_options:
        description: 'Build Options'
      enterprise-provisioning-profile:
        description: 'Enterprise Provisioning Profile'
        # Default value if no value is explicitly provided
        default: 'dae3007d-dbd8-4f85-bfbd-5cbef813cd3b'  
      enterprise-signing-certificate:
        description: 'Enterprise Signing Certificate'
        # Default value if no value is explicitly provided
        default: '26A81253A00C87FE083195619F265D8423F790B7'

      strategy:
        type: choice
        description: Build Strategy
        options:
        - "Composite Action"        
        - "Inline"  
        - "Four Builds"
        - "Single Build"
        - "Dispatched Build"
      # build-using-composite-action:
      #   type: boolean
      #   description: Build Via Composite Action
      #   default: true
        
      job-type:
        type: choice
        description: Job Type
        options:
        - "Build Archive"        
        - "Build IPA"        
        - "Deployment"
      deploy-via-azure:
        type: boolean
        description: Deploy Via Azure

      attach-ipa:
        type: boolean
        description: Attach IPA to Run        
      enterprise-app:
        type: boolean
        description: Enterprise App
        default: true
      app-store-app:
        type: boolean
        description: App Store App        
      # run-workflow-size-check:
      #   type: boolean
      #   description: Run Workflow Size Checks
      runner:
        type: choice
        description: Tools Version
        options:
        - "14"        
        - "15"           
env:
    scheme: 'MemoryMatrix'
    appName: 'MemoryMatrix'
    ipaName: MemoryMatrix.ipa
    appCenterToken: xxxxx2d2090d16faddb2421e47676b2016566225
    appCenterAppID: 'xxxxxxxx-70d1-d4b8-cd92-53e578e87523'
    appVersion: 2.2.6
    ascKeyId: ${{secrets.APP_STORE_CONNECT_API_KEY}}
    ascIssuerId: ${{secrets.APP_STORE_CONNECT_API_ISSUER_ID}}    
    APP_SIZE_RESTRICTIONS: ${{vars.APP_SIZE_RESTRICTIONS}}
    ARCHIVE_PATH:  "${{ github.workspace }}/bld/MemoryMatrixApp.xcarchive"
    IPA_PATH:  "${{ github.workspace }}/ipa"
    
jobs:
  start-runner:
   if: ${{ inputs.deploy-via-azure }}
   runs-on: ubuntu-latest
   steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Start Azure Runner
        if: ${{ inputs.deploy-via-azure }}
        run: |          
          echo "Starting Runner..."  
          ./scripts/start-runner.sh -b "${newBuildNumber}" -v "$appVersion"

  inputs-validation:
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:
      - name: Inputs Validation
        run: |
            echo "Validating Inputs..."  
            if ${{ inputs.attach-ipa }} == "true"; then
              echo "Validating attach IPA request: Does build create an IPA?"
              if [ "${{ inputs.job-type }}" != "Build IPA" ] && [ "${{ inputs.job-type }}" != "Deployment" ]; then
                echo "::error file={Inputs Validation},line={1},endLine={1},title={Inputs Validation}::{Attach IPA requested but job type does not create an IPA}"
                exit 1
              fi
            fi

  dispatched-build:
    if: inputs.strategy == 'Dispatched Build'
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:     
      - name: Trigger Single Build V1
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "build-and-deploy.yml",
              ref: context.ref,
              inputs: {
                strategy: "Single Build",
                runner: "15",
                build_options: "V1"
              }
            })
      - name: Trigger Single Build V2
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "build-and-deploy.yml",
              ref: context.ref,
              inputs: {
                strategy: "Single Build",
                runner: "15",
                build_options: "V2"
              }
            })
            
  build-four-builds:
    if: inputs.strategy == 'Four Builds'
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:
      - name: Build Four Builds
        run: |
            echo "Exectuing Four Builds"

  build-single-build:
    if: inputs.strategy == 'Single Build'
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:

      - name: Single Build Calculate New Build Number
        run: |
            newBuildNumber=$(echo $((${{env.buildNumberBase}}+${{github.run_number}})))
            echo "New Build Number: $newBuildNumber"
            echo "newBuildNumber=$newBuildNumber" >> $GITHUB_ENV       
      - name: Single Build Options Echo
        run: |
            echo "Exectuing Single Build Options:"
            echo "Options: ${{inputs.build_options}}"

  build-via-composite-action:
    # if: inputs.build-using-composite-action == true 
    if: inputs.strategy == 'Composite Action'
    needs: [inputs-validation]
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:
      - uses: actions/checkout@main
      - id: enterprise-build-via-composite-action-step
        name: Enterprise Build Via Composition
        if: inputs.enterprise-app == true
        uses: rzmudzin/phx-build-deploy-action@certs
        with:
          secrets: ${{ toJSON(secrets) }}
          actionInputs: ${{ toJSON(inputs) }}
          is-enterprise-app-build: true
          enable-extended-ops: false
      - name: Enterprise Build Summary
        if: inputs.enterprise-app == true
        run: |
            echo "Build Number ${newBuildNumber} Completed"

      - uses: actions/checkout@main
      - id: appstore-build-via-composite-action-step
        name: App Store Build Via Composition
        if: inputs.app-store-app == true
        uses: rzmudzin/phx-build-deploy-action@certs
        with:
          secrets: ${{ toJSON(secrets) }}
          actionInputs: ${{ toJSON(inputs) }}
          is-enterprise-app-build: false
          enable-extended-ops: false
      - name: App Store Build Summary
        if: inputs.app-store-app == true
        run: |
            echo "Build Number ${newBuildNumber} Completed"            
     
  build:
    # if: inputs.build-using-composite-action != true 
    if: inputs.strategy == 'Inline'
    needs: [inputs-validation]
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:
      - name: Calculate New Build Number
        run: |
            newBuildNumber=$(echo $((${{env.buildNumberBase}}+${{github.run_number}})))
            echo "New Build Number: $newBuildNumber"
            echo "newBuildNumber=$newBuildNumber" >> $GITHUB_ENV    
      - name: Download artifact
        if: ${{ false }}
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
        # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
        # Required, if the artifact is from a different repo
        # Required, if the repo is private a Personal Access Token with `repo` scope is needed
         github_token: ${{secrets.GITHUB_TOKEN}}
         # Optional, workflow file name or ID
         # If not specified, will be inferred from run_id (if run_id is specified), or will be the current workflow
         workflow: composite-workflow.yml
         name: timestamp
      - name: Extract Last Run Time
        if: ${{ false }}
        run: |
          lastRun=$(cat timestamp.txt)
          echo "Last Run: $lastRun"
          #ls -R          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build
        #if: ${{ false }}
        run: |
          echo "Building..."
          pwd
          ls -lah
          
          echo "Workflow: ${{github.workflow}}"
          echo "appVersion: $appVersion"
          echo "newBuildNumber: ${newBuildNumber}"
          echo "Is Enterprise App: ${{ inputs.enterprise-app }}"
          if ${{ inputs.enterprise-app }} == "true"; then
            echo "Enterprise App"
            ./scripts/deploy.sh -b "${newBuildNumber}" -v "$appVersion" -S "iPhone Distribution: Phoenix Roberts LLC" -M dae3007d-dbd8-4f85-bfbd-5cbef813cd3b -s "Enterprise MemoryMatrix" -c "Enterprise Release" -i "${ARCHIVE_PATH}"
          else
            echo "App Store App"
            ./scripts/deploy.sh -b "${newBuildNumber}" -v "$appVersion" -S "Apple Distribution: Robert Zmudzinski (LK58XLFP48)" -M cc7c62a4-7417-4578-b2f0-30b5f8fd50fe -s "MemoryMatrix" -c "Release" -i "${ARCHIVE_PATH}"
          fi
          
      - name: Package
        if: inputs.job-type == 'Build IPA' || inputs.job-type == 'Deployment'
        run: |          
          echo "Packaging For Job Type: ${{ inputs.job-type }}"
          if ${{ inputs.enterprise-app }} == "true"; then
            echo "Creating Enterprise Package..."
            xcodebuild -exportArchive -archivePath "${ARCHIVE_PATH}" -exportPath "${IPA_PATH}" -exportOptionsPlist ./export-enterprise.plist
          else 
            echo "Creating App Store Package..."
            currentRun=$(cat timestamp.txt)
            echo "Current Run: $currentRun"  
            # ./scripts/package.sh
            xcodebuild -exportArchive -archivePath "${ARCHIVE_PATH}" -exportPath "${IPA_PATH}" -exportOptionsPlist ./export-appstore.plist     
          fi
          echo "Workflow: ${{github.workflow}}" > "${IPA_PATH}/changes.txt"
          echo "appVersion: $appVersion" >> "${IPA_PATH}/changes.txt"
          echo "newBuildNumber: ${newBuildNumber}" >> "${IPA_PATH}/changes.txt"
          find "${ARCHIVE_PATH}" -name "*" > results.txt
          find "${IPA_PATH}" -name "*" >> results.txt               
      # - name: Size Checks
      #   if: ${{ inputs.run-workflow-size-check }}
      #   run: |
      #     echo "Executing size checks..."
      #     echo "${{ vars.APP_SIZE_RESTRICTIONS }}"
      #     find ~/bld/MemoryMatrixApp.xcarchive -name "*.car" -print0 | xargs -0 -I {} python3 ./scripts/check-asset-size.py --cpath {} ${{ vars.APP_SIZE_RESTRICTIONS }}
      #     echo "Size checks completed."
      - name: Upload Package
        if: inputs.job-type == 'Deployment'
        run: |    
          if ${{ inputs.enterprise-app }} == "true"; then
            echo "Uploading To App Center..."  
            appcenter distribute release --app "rzmudzin-s9j5/Matrix" --file "${IPA_PATH}/MemoryMatrix.ipa" --release-notes-file "${IPA_PATH}/changes.txt" --token f8ce02d0928ad5364cadbf43545707805c9d1660 --group "Collaborators"
          else
            echo "Uploading To Apple App Store..."  
            ./scripts/upload.sh -b "${newBuildNumber}" -v "$appVersion" -i "$ascIssuerId" -k "$ascKeyId" -p "${IPA_PATH}/MemoryMatrix.ipa"
          fi
          
      - name: Attach Results
        uses: actions/upload-artifact@v2
        with:
          name: results
          path: results.txt
      - name: Attach IPA
        if: inputs.attach-ipa == true && (inputs.job-type == 'Build IPA'|| inputs.job-type == 'Deployment')
        uses: actions/upload-artifact@v2
        with:
          name: MemoryMatrix
          path: "${{ env.IPA_PATH }}/MemoryMatrix.ipa"
