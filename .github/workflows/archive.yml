# This is a basic workflow that is manually triggered

name: Archive

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Build Type'
        # Default value if no value is explicitly provided
        default: 'Deployment'
        # Input has to be provided for the workflow to run
#         required: true
env:
    scheme: 'MemoryMatrix'
    ipaName: MemoryMatrix.ipa
    appCenterToken: xxxxx2d2090d16faddb2421e47676b2016566225
    appCenterAppID: 'xxxxxxxx-70d1-d4b8-cd92-53e578e87523'
    appVersion: 2.2.5
    ascKeyId: ${{secrets.APP_STORE_CONNECT_API_KEY}}
    ascIssuerId: ${{secrets.APP_STORE_CONNECT_API_ISSUER_ID}}    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Calculate New Build Number
        run: |
            newBuildNumber=$(echo $((${{env.buildNumberBase}}+${{github.run_number}})))
            echo "New Build Number: $newBuildNumber"
            echo "newBuildNumber=$newBuildNumber" >> $GITHUB_ENV    
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
        # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
        # Required, if the artifact is from a different repo
        # Required, if the repo is private a Personal Access Token with `repo` scope is needed
         github_token: ${{secrets.GITHUB_TOKEN}}
         # Optional, workflow file name or ID
         # If not specified, will be inferred from run_id (if run_id is specified), or will be the current workflow
         workflow: composite-workflow.yml
         name: timestamp
      - name: Extract Last Run Time
        run: |
          lastRun=$(cat timestamp.txt)
          echo "Last Run: $lastRun"
          #ls -R          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build
        #if: ${{ false }}
        run: |  
          echo "Building..."
          pwd
          ls -lah
          echo "Workflow: ${{github.workflow}}"
          echo "appVersion: $appVersion"
          echo "newBuildNumber: ${newBuildNumber}"
          ./scripts/deploy.sh -b "${newBuildNumber}" -v "$appVersion"
      - name: Package
        run: |          
          echo "Packaging..."
          currentRun=$(cat timestamp.txt)
          echo "Current Run: $currentRun"        
      - name: Upload
        if: ${{ false }}
        run: |          
          echo "Uploading..."  
          ./scripts/upload.sh -b "${newBuildNumber}" -v "$appVersion" -i "$ascIssuerId" -k "$ascKeyId"
      - name: Upload Results
        #if: ${{ false }}
        uses: actions/upload-artifact@v2
        with:
          name: results
          path: results.txt
      - name: Upload Time Stamp
        if: ${{ false }}
        uses: actions/upload-artifact@v2
        with:
          name: timestamp
          path: timestamp.txt   
#   release-project:
#     name: Release Project
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Download Artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: timestamp
#       - name: Test Download
#         run: ls -R          
