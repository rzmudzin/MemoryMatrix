# This is a basic workflow that is manually triggered

name: Dispatched Builds

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      build_options:
        description: 'Build Options'
      strategy:
        type: choice
        description: Build Strategy
        options:
        - "Scripts Build"        
        - "Single Build"
        - "Dispatched Build"
      dsap:
        description: 'DSAP Environment(tst1/tst2/uat1/uat2)'
        default: 'tst1'
      fusionid:
        type: choice
        description: Fusion Set
        options:
        - "MITM"
        - "No MITM"
        - "ALL"
        default: "MITM"        
      runner:
        type: choice
        description: Tools Version
        options:
        - "14"        
        - "15"           
env:
    scheme: 'MemoryMatrix'
    appName: 'MemoryMatrix'
    ipaName: MemoryMatrix.ipa
    appCenterToken: xxxxx2d2090d16faddb2421e47676b2016566225
    appCenterAppID: 'xxxxxxxx-70d1-d4b8-cd92-53e578e87523'
    appVersion: 2.2.6
    ascKeyId: ${{secrets.APP_STORE_CONNECT_API_KEY}}
    ascIssuerId: ${{secrets.APP_STORE_CONNECT_API_ISSUER_ID}}    
    APP_SIZE_RESTRICTIONS: ${{vars.APP_SIZE_RESTRICTIONS}}
    ARCHIVE_PATH:  "${{ github.workspace }}/bld/MemoryMatrixApp.xcarchive"
    IPA_PATH:  "${{ github.workspace }}/ipa"
    
jobs:
  start-runner:
   if: ${{ inputs.deploy-via-azure }}
   runs-on: ubuntu-latest
   steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Start Azure Runner
        if: ${{ inputs.deploy-via-azure }}
        run: |          
          echo "Starting Runner..."  
          ./scripts/start-runner.sh -b "${newBuildNumber}" -v "$appVersion"

  inputs-validation:
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:
      - name: Inputs Validation
        run: |
            echo "Validating Inputs..."  
            if ${{ inputs.attach-ipa }} == "true"; then
              echo "Validating attach IPA request: Does build create an IPA?"
              if [ "${{ inputs.job-type }}" != "Build IPA" ] && [ "${{ inputs.job-type }}" != "Deployment" ]; then
                echo "::error file={Inputs Validation},line={1},endLine={1},title={Inputs Validation}::{Attach IPA requested but job type does not create an IPA}"
                exit 1
              fi
            fi
            
  evaluate-build-inputs:
    # if: contains( inputs.dsap, ',' ) || inputs.fusionid == "ALL" )
    if: contains( inputs.dsap, ',' )
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:     
      - name: Evaluate Build Inputs
        run: |
            echo "DSAP: ${{ inputs.dsap }}"
            echo "Fusion ID: ${{ inputs.fusionid }}"
            echo "Build Strategy: ${{inputs.strategy}}"
            
  run-dispatched-builds:
    if: inputs.strategy == 'Dispatched Build'
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:     
      - name: Dispatched Build Calculate New Build Number
        run: |
            newBuildNumber=$(echo $((${{env.buildNumberBase}}+${{github.run_number}})))
            echo "New Build Number: $newBuildNumber"
            echo "newBuildNumber=$newBuildNumber" >> $GITHUB_ENV     
      - name: Trigger Single Build V1
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "dispatched_builds.yml",
              ref: context.ref,
              inputs: {
                strategy: "Single Build",
                runner: "15",
                build_options: "V1${{inputs.runner}}"
              }
            })
      - name: Trigger Single Build V2
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "dispatched_builds.yml",
              ref: context.ref,
              inputs: {
                strategy: "Single Build",
                runner: "15",
                build_options: "V2",
              }
            })
            
  build-single-build:
    if: inputs.strategy == 'Single Build'
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:

      - name: Single Build Calculate New Build Number
        run: |
            newBuildNumber=$(echo $((${{env.buildNumberBase}}+${{github.run_number}})))
            echo "New Build Number: $newBuildNumber"
            echo "newBuildNumber=$newBuildNumber" >> $GITHUB_ENV       
      - name: Single Build Options Echo
        run: |
            echo "Exectuing Single Build Options:"
            echo "Options: ${{inputs.build_options}}"
            fusionId="MITM"
            dsap="tst1"
            parentBuildNumber=""
            attachCommitHash="true"
            if [[ "${{inputs.build_options}}" == *";"* ]]; then
              echo "Child Build Inputs Present"
              IFS=';' read fusionId dsap parentBuildNumber attachCommitHash <<< "${{inputs.build_options}}"
            else
              echo "Not a chold build"
            fi
            echo "Fusion Id: ${fusionId}"
            echo "DSAP: ${dsap}"
            echo "Parent Build Number: ${parentBuildNumber}"
            echo "Attach Commit Hash: ${attachCommitHash}"


  scripts-build:
    if: inputs.strategy == 'Scripts Build'
    runs-on: ["self-hosted", "x${{inputs.runner}}"]
    steps:

      - name: Scripts Build Calculate New Build Number
        run: |
            newBuildNumber=$(echo $((${{env.buildNumberBase}}+${{github.run_number}})))
            echo "New Build Number: $newBuildNumber"
            echo "newBuildNumber=$newBuildNumber" >> $GITHUB_ENV       
      - name: Scripts Build
        uses: actions/github-script@v6
        env:
          FIRST_NAME: Mona
          LAST_NAME: Octocat
        with:
          script: |
            //const { FIRST_NAME, LAST_NAME } = process.env
            //console.log(`Hello ${FIRST_NAME} ${LAST_NAME}`)
            let options = "${{inputs.build_options}}";
            let dsap = "${{inputs.dsap}}";
            let fusionid = "${{inputs.fusionid}}";
            let newBuildNumber = "${{env.newBuildNumber}}";

            fusionSets = ['No MITM', 'MITM'];
            if (fusionid != "ALL") {
              fusionSets = [fusionid];
            }
            for (i = 0; i < fusionSets.length; i++) {
              //console.log("Processing Fusion Set: " + fusionSets[i]);
              let dsapValues = dsap.split(",")
              for (dsapIndex = 0; dsapIndex < dsapValues.length; dsapIndex++) {
                let buildOptions = fusionSets[i] + ";" + dsapValues[dsapIndex] + ";" + newBuildNumber + ";";
                if (dsapIndex+1 == dsapValues.length && i+1 == fusionSets.length) {
                  buildOptions += "true";
                } else {
                  buildOptions += "false";
                }
                console.log(buildOptions);
                github.rest.actions.createWorkflowDispatch({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    workflow_id: "dispatched_builds.yml",
                    ref: context.ref,
                    inputs: {
                      strategy: "Single Build",
                      runner: "15",
                      build_options: buildOptions,
                    }
                })
              }
            }
            
            //console.log("Options: " + options);
            //console.log("DSAP: " + dsap);
            //console.log("Fusion Id: " + fusionid);
            //console.log("New Build Number: " + newBuildNumber);

            //let dsapValues = dsap.split(",")
            //for (i = 0; i < dsapValues.length; i++) {
            //  console.log("Processing DSAP " + dsapValues[i]);
            //  let buildOptions = fusionid + ";" + dsapValues[i] + ";" + newBuildNumber + ";testing123";
            //  console.log("Dispatched Build Options: " + buildOptions);
            //  github.rest.actions.createWorkflowDispatch({
            //    owner: context.repo.owner,
            //    repo: context.repo.repo,
            //    workflow_id: "dispatched_builds.yml",
            //    ref: context.ref,
            //    inputs: {
            //      strategy: "Single Build",
            //      runner: "15",
            //      build_options: buildOptions,
            //    }
            //  })
            //}
            
            //console.log("Just a simple test");
            //let x;
            //for (x = 2; x <= 4; x++) {
            //  console.log("Value of x:" + x);
            //}
            //console.log(context)
